{"version":3,"sources":["componentes/Header.js","componentes/Formulario.js","helper.js","componentes/Resumen.js","componentes/Resultado.js","componentes/App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","titulo","Formulario","marcaRef","React","createRef","yearRef","planBasicoRef","planCompletoRef","cotizarSeguro","e","preventDefault","plan","current","checked","console","log","value","infoAuto","marca","year","onSubmit","this","name","ref","type","Component","obtenerDiferenciaAnio","Date","getFullYear","calcularMarca","modelo","incremento","obtenerPlan","primeraMayuscula","texto","charAt","toUpperCase","slice","Resumen","mostrarResumen","datos","Resultado","resultado","mensaje","TransitionGroup","component","CSSTransition","timeout","enter","exit","App","state","resultados","incrementoPlan","parseFloat","toFixed","datosAuto","setState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4191e0c2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = props => {\r\nreturn(\r\n    <header className=\"top\"> \r\n       <h1>\r\n        {props.titulo}\r\n        </h1>\r\n    </header>\r\n     )\r\n}\r\n\r\nexport default Header; ","import React, {Component} from 'react';\r\n\r\nclass Formulario extends Component{\r\n    //refs son para leer los valores de los campos de un formulario\r\n    marcaRef = React.createRef();\r\n    yearRef = React.createRef();\r\n    planBasicoRef = React.createRef();\r\n    planCompletoRef = React.createRef();\r\n\r\n    cotizarSeguro = (e) => {\r\n        e.preventDefault();\r\n        \r\n    //Leer el plan\r\n    const plan =this.planBasicoRef.current.checked ? 'basico' : 'Completo';    \r\n   \r\n    //obtener los datos\r\n    console.log(this.marcaRef.current.value);\r\n\r\n    //crear el objeto\r\n    const infoAuto = {\r\n        marca:this.marcaRef.current.value,\r\n        year:this.yearRef.current.value,\r\n        plan:plan\r\n    }\r\n    console.log(infoAuto);\r\n\r\n    //Enviarlo al componente principal\r\n    this.props.cotizarSeguro(infoAuto);\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"cotizar-auto\" onSubmit={this.cotizarSeguro} >\r\n                <div className=\"campo\">\r\n                    <label>Marca</label>\r\n                    <select name=\"marca\" ref={this.marcaRef} >\r\n                        <option value=\"americano\">Americano</option>\r\n                        <option value=\"europeo\">Europeo</option>\r\n                        <option value=\"asiatico\">Asiatico</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"campo\">\r\n                    <label>Año</label>\r\n                    <select name=\"year\" ref={this.yearRef}>\r\n                        <option value=\"2018\">2018</option>\r\n                        <option value=\"2017\">2017</option>\r\n                        <option value=\"2016\">2016</option>\r\n                        <option value=\"2015\">2015</option>\r\n                        <option value=\"2014\">2014</option>\r\n                        <option value=\"2013\">2013</option>\r\n                        <option value=\"2012\">2012</option>\r\n                        <option value=\"2011\">2011</option>\r\n                        <option value=\"2010\">2010</option>\r\n                        <option value=\"2009\">2009</option>\r\n                        <option value=\"2008\">2008</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"campo\">\r\n                    <label>Plan:</label>\r\n                    <input type=\"radio\" ref={this.planBasicoRef} name=\"plan\" value=\"basico\"/> Básico\r\n                    <input type=\"radio\" ref={this.planCompletoRef} name=\"plan\" value=\"completo\"/> Completo\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"boton\">Cotizar</button>\r\n            </form>\r\n        );\r\n    }\r\n    }\r\n\r\n\r\nexport default Formulario;","\r\nexport function obtenerDiferenciaAnio(year) {\r\n    return new Date().getFullYear() - year;\r\n }\r\n \r\n export function calcularMarca( modelo ) {\r\n     let incremento;\r\n \r\n     switch (modelo) {\r\n         case 'europeo':\r\n             incremento = 1.30;\r\n             break;\r\n         case 'americano':\r\n             incremento = 1.15;\r\n             break;\r\n         case 'asiatico':\r\n             incremento = 1.05;\r\n             break;\r\n         default:\r\n             break;\r\n     }\r\n \r\n     return incremento;\r\n }\r\n export function obtenerPlan( plan ) {\r\n     return (plan === 'basico') ? 1.20 : 1.50;\r\n }\r\n export function primeraMayuscula(texto) {\r\n     return texto.charAt(0).toUpperCase() + texto.slice(1);\r\n }","import React, {Component} from 'react';\r\nimport {primeraMayuscula} from '../helper';\r\n\r\n\r\nclass Resumen extends Component{\r\n   \r\n   mostrarResumen = () => {\r\n    const{marca, year, plan}=this.props.datos;\r\n\r\n    if (!marca || !year || !plan) return null;\r\n\r\n       return (\r\n        <div className=\"resumen\">\r\n            <h2>Resúmen de Cotización</h2>\r\n            <li>Marca: {primeraMayuscula(marca) }</li>\r\n            <li>Plan: {primeraMayuscula(plan) }</li>\r\n            <li>Año del Auto: {primeraMayuscula(year)}</li>\r\n        </div>\r\n       )\r\n   }\r\n   \r\n    render(){\r\n        return(\r\n       <div>\r\n            {this.mostrarResumen()}\r\n       </div>\r\n              )\r\n    }\r\n}\r\n\r\nexport default Resumen;","import React, {Component} from 'react';\r\nimport {TransitionGroup, CSSTransition} from 'react-transition-group';\r\n\r\nclass Resultado extends Component {\r\n    render(){\r\n        const resultado = this.props.resultado;\r\n        const mensaje = (!resultado) ? 'Elije Marca, Año y Tipo de Seguro' : 'El total es: $';\r\n        return(\r\n            <div className=\"gran-total\">\r\n                {mensaje}\r\n                <TransitionGroup component=\"span\" className=\"resultado\">\r\n                    <CSSTransition\r\n                        className=\"resultado\" \r\n                            key={resultado}\r\n                            timeout={{enter: 500, exit:500}}>\r\n                                <span>{resultado}</span>\r\n                    </CSSTransition>                    \r\n                </TransitionGroup>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Resultado;","import React, { Component } from 'react';\nimport Header from './Header';\nimport Formulario from './Formulario';\nimport Resumen from './Resumen';\nimport Resultado from './Resultado'\nimport {obtenerDiferenciaAnio, calcularMarca, obtenerPlan} from '../helper';\nimport { render } from 'react-dom';\n\nclass App extends Component { \n\n  state ={\n    resultados : '',\n    datos:{}\n  }\n\n  cotizarSeguro = (datos) => {\n  const {marca, plan, year} = datos;\n  \n  //Agregar una base de 2000\n  let resultado =2000;\n  \n  //Obtener la diferencia de años \n  const diferencia = obtenerDiferenciaAnio(year);   \n\n  //y por cada año restar el 3%  \n  resultado -= ((diferencia * 3)* resultado) /100;\n \n  //Americano 15% Asiatico 5% y europeo 30% de incremento al valor actual\n  resultado = calcularMarca(marca) * resultado;\n \n  //el plan del auto, el básico incrementa el valor 20% y\n  //cobertura completa %50\n  let incrementoPlan = obtenerPlan(plan);\n \n  //dependiendo del plan incrementar\n  resultado = parseFloat (incrementoPlan * resultado).toFixed(2);\n  \n  //Crear objeto para el resumen\n  const datosAuto = {\n    marca:marca,\n    plan:plan,\n    year:year\n  }\n\n\n  // ya tenemos el costo. \n    this.setState({\n      resultado : resultado,\n      datos: datosAuto\n    })\n}\n\n\n  render(){\n  return (\n    <div className=\"contenedor\">\n      <Header\n        titulo='Cotizador de Seguro de Auto'\n      />\n     \n     <div className=\"contenedor-formulario\">\n      <Formulario\n        cotizarSeguro={this.cotizarSeguro}\n      />\n      <Resumen\n        datos={this.state.datos}\n      />\n      <Resultado\n        resultado={this.state.resultado}\n      />\n     </div>\n\n    </div>\n  );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './componentes/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}